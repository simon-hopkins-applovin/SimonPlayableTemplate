
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.4 (Phaser v2.6.2)


/**
 * GEOImage
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Number} aX The x coordinate (in world space) to position the Sprite at.
 * @param {Number} aY The y coordinate (in world space) to position the Sprite at.
 * @param {any} aKey This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.
 * @param {any} aFrame If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.
 */
function GEOImage(aGame, aX, aY, aKey, aFrame) {
	Phaser.Sprite.call(this, aGame, aX, aY, aKey || 'debugBtn', aFrame == undefined || aFrame == null? null : aFrame);
	this.anchor.set(0.5, 0.5);
	this.data = {
	tag:'',
	geoInit: 0,
	rootOverride:'',
	geoEN:'',
	geoCNS:'',
	geoCNT:'',
	geoES:'',
	geoFR:'',
	geoJA:'',
	geoKO:'',
	geoRU:'',
	geoTR:'',
	geoDE:'',
	geoID:'',
	geoIT:'',
	geoMY:'',
	geoPT:'',
	geoTH:'',
	geoAR:'',
	geoVI:'',
	};
	
}

/** @type Phaser.Sprite */
var GEOImage_proto = Object.create(Phaser.Sprite.prototype);
GEOImage.prototype = GEOImage_proto;
GEOImage.prototype.constructor = GEOImage;

/* --- end generated code --- */
// -- user code here --

GEOImage.prototype.update = function(){
	if(this.data.geoInit==0){
		this.tag = this.data.tag;
		if(!Global.isGEOImageAutodetectForceOff){
			this.autoDetectGEOKeys();
		}
		this.setLanguage();
		this.data.geoInit=1;
		Global.GEOImageObjs.push(this);
		this.game.state.getCurrentState().customGEOAdjustments(this);
		if(Global.isGEOImageVerboseLogging)console.log(Global.GEOImageObjs);
	}
};

GEOImage.prototype.autoDetectGEOKeys = function(){
	// Set EN Key
	this.data.geoEN = this.key;
	
	// root EN is the key of the EN image minus appended "EN" or "_EN" or " EN"
	var rootEN = this.key;
	
	if(Global.isGEOImageVerboseLogging)console.log("rootEN: " + rootEN);
	if(rootEN.slice(-2) == "EN"){
		if(Global.isGEOImageVerboseLogging)console.log("ends with EN appended, removing it from root");
		rootEN = rootEN.substring(0, rootEN.length-2);
		if(Global.isGEOImageVerboseLogging)console.log("current root: " + rootEN);
		// now check if it was preceded by a "_" or " ", if so remove
		if(rootEN.slice(-1) == " " || rootEN.slice(-1) == "_"){
			if(Global.isGEOImageVerboseLogging)console.log("now ends with '" +rootEN.slice(-1) + "' removing last char from root");
			rootEN = rootEN.substring(0, rootEN.length-1);
			if(Global.isGEOImageVerboseLogging)console.log("new root: " + rootEN);
		}
	}
	else{
		if(Global.isGEOImageVerboseLogging)console.log("does not have EN appended, root unchanged");
	}
	if(this.data.rootOverride != ""){
		rootEN = this.data.rootOverride;
	}
	
	//////////////////////////////////
	//			CNS					//
	//////////////////////////////////
	// start looking for keys for each lang for unfilled fields
	if(this.data.geoCNS == ''){
		var appendLangStr = "CNS";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
			if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoCNS = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoCNS = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoCNS = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoCNS;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
		// Also check CN_S
		appendLangStr = "CN_S";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoCNS = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoCNS = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoCNS = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoCNS;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			CNT					//
	//////////////////////////////////
	if(this.data.geoCNT == ''){
		var appendLangStr = "CNT";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoCNT = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoCNT = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoCNT = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoCNT;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
		// Also check CN_T
		appendLangStr = "CN_T";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoCNT = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoCNT = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoCNT = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoCNT;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			ES					//
	//////////////////////////////////
	if(this.data.geoES == ''){
		var appendLangStr = "ES";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoES = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoES = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoES = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoES;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			FR					//
	//////////////////////////////////
	if(this.data.geoFR == ''){
		var appendLangStr = "FR";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoFR = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoFR = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoFR = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoFR;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			JA					//
	//////////////////////////////////
	if(this.data.geoJA == ''){
		var appendLangStr = "JA";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoJA = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoJA = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoJA = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoJA;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
		// Also check CN_T
		appendLangStr = "JP";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoJA = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoJA = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoJA = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoJA;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			KO					//
	//////////////////////////////////
	if(this.data.geoKO == ''){
		var appendLangStr = "KO";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoKO = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoKO = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoKO = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoKO;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
		// Also check KR
		var appendLangStr = "KR";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoKO = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoKO = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoKO = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoKO;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			RU					//
	//////////////////////////////////
	if(this.data.geoRU == ''){
		var appendLangStr = "RU";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoRU = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoRU = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoRU = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoRU;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			TR					//
	//////////////////////////////////
	if(this.data.geoTR == ''){
		var appendLangStr = "TR";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoTR = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoTR = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoTR = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoTR;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			AR					//
	//////////////////////////////////
	if(this.data.geoAR == ''){
		var appendLangStr = "AR";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoAR = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoAR = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoAR = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoAR;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			DE					//
	//////////////////////////////////
	if(this.data.geoDE == ''){
		var appendLangStr = "DE";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoDE = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoDE = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoDE = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoDE;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			ID					//
	//////////////////////////////////
	if(this.data.geoID == ''){
		var appendLangStr = "ID";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoID = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoID = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoID = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoID;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			IT					//
	//////////////////////////////////
	if(this.data.geoID == ''){
		var appendLangStr = "IT";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoIT = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoIT = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoIT = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoIT;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			MY					//
	//////////////////////////////////
	if(this.data.geoID == ''){
		var appendLangStr = "MY";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoMY = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoMY = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoMY = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoMY;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			PT					//
	//////////////////////////////////
	if(this.data.geoID == ''){
		var appendLangStr = "PT";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoPT = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoPT = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoPT = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoPT;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			TH					//
	//////////////////////////////////
	if(this.data.geoID == ''){
		var appendLangStr = "TH";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoTH = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoTH = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoTH = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoTH;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}
	//////////////////////////////////
	//			VI					//
	//////////////////////////////////
	if(this.data.geoID == ''){
		var appendLangStr = "VI";
		if(this.game.cache.checkImageKey(rootEN+appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ " " + appendLangStr) ||
			this.game.cache.checkImageKey(rootEN+ "_" +appendLangStr)){
				if(Global.isGEOImageVerboseLogging)console.log("Autodetect key found for root " + rootEN + " for language " + appendLangStr);
				if		(this.game.cache.checkImageKey(rootEN+appendLangStr)) { this.data.geoVI = rootEN+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+" "+appendLangStr)) { this.data.geoVI = rootEN+" "+appendLangStr;}
				else if	(this.game.cache.checkImageKey(rootEN+"_"+appendLangStr)) { this.data.geoVI = rootEN+"_"+appendLangStr;}
				var newKeyVal = this.data.geoVI;
				if(Global.isGEOImageVerboseLogging)console.log("new value for geo"+appendLangStr+": "+ newKeyVal);
			}
	}	
};

GEOImage.prototype.setLanguage = function(){
	if(Global.LangCode == "EN" && this.data.geoEN!=''){
		if(!this.game.cache.checkImageKey(this.data.geoEN)) { 
			var keyName = this.data.geoEN;
			throw ("EN image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoEN);
	}
	else if(Global.LangCode == "CN_S" && this.data.geoCNS!=''){
		if(!this.game.cache.checkImageKey(this.data.geoCNS)) { 
			var keyName = this.data.geoCNS;
			throw ("CN_S image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoCNS);
	}
	else if(Global.LangCode == "CN_T"&& this.data.geoCNT!=''){
		if(!this.game.cache.checkImageKey(this.data.geoCNT)) { 
			var keyName = this.data.geoCNT;
			throw ("CN_T image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoCNT);
	}
	else if(Global.LangCode == "ES"&& this.data.geoES!=''){
		if(!this.game.cache.checkImageKey(this.data.geoES)) { 
			var keyName = this.data.geoES;
			throw ("ES image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoES);
	}
	else if(Global.LangCode == "FR"&& this.data.geoFR!=''){
		if(!this.game.cache.checkImageKey(this.data.geoFR)) { 
			var keyName = this.data.geoFR;
			throw ("FR image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoFR);
	}
	else if(Global.LangCode == "JA"&& this.data.geoJA!=''){
		if(!this.game.cache.checkImageKey(this.data.geoJA)) { 
			var keyName = this.data.geoJA;
			throw ("JA image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoJA);
	}
	else if(Global.LangCode == "KO"&& this.data.geoKO!=''){
		if(!this.game.cache.checkImageKey(this.data.geoKO)) { 
			var keyName = this.data.geoKO;
			throw ("KO image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoKO);
	}
	else if(Global.LangCode == "RU"&& this.data.geoRU!=''){
		if(!this.game.cache.checkImageKey(this.data.geoRU)) { 
			var keyName = this.data.geoRU;
			throw ("RU image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoRU);
	}
	else if(Global.LangCode == "TR"&& this.data.geoTR!=''){
		if(!this.game.cache.checkImageKey(this.data.geoTR)) { 
			var keyName = this.data.geoTR;
			throw ("TR image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoTR);
	}
	else if(Global.LangCode == "AR"&& this.data.geoAR!=''){
		if(!this.game.cache.checkImageKey(this.data.geoAR)) { 
			var keyName = this.data.geoAR;
			throw ("AR image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoAR);
	}
	else if(Global.LangCode == "DE"&& this.data.geoDE!=''){
		if(!this.game.cache.checkImageKey(this.data.geoDE)) { 
			var keyName = this.data.geoDE;
			throw ("DE image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoDE);
	}
	else if(Global.LangCode == "ID"&& this.data.geoID!=''){
		if(!this.game.cache.checkImageKey(this.data.geoID)) { 
			var keyName = this.data.geoID;
			throw ("ID image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoID);
	}
	else if(Global.LangCode == "IT"&& this.data.geoIT!=''){
		if(!this.game.cache.checkImageKey(this.data.geoIT)) { 
			var keyName = this.data.geoIT;
			throw ("IT image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoIT);
	}
	else if(Global.LangCode == "MY"&& this.data.geoMY!=''){
		if(!this.game.cache.checkImageKey(this.data.geoMY)) { 
			var keyName = this.data.geoMY;
			throw ("MY image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoMY);
	}
	else if(Global.LangCode == "PT"&& this.data.geoPT!=''){
		if(!this.game.cache.checkImageKey(this.data.geoPT)) { 
			var keyName = this.data.geoPT;
			throw ("PT image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoPT);
	}
	else if(Global.LangCode == "TH"&& this.data.geoTH!=''){
		if(!this.game.cache.checkImageKey(this.data.geoTH)) { 
			var keyName = this.data.geoTH;
			throw ("TH image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoTH);
	}
	else if(Global.LangCode == "VI"&& this.data.geoVI!=''){
		if(!this.game.cache.checkImageKey(this.data.geoVI)) { 
			var keyName = this.data.geoVI;
			throw ("VI image geo file name specified, but file not found! " + keyName);
		}
		this.loadTexture(this.data.geoVI);
	}
};



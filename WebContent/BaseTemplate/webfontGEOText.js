
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.3 (Phaser v2.6.2)


/**
 * webfontGEOText
 * @param {Phaser.Game} aGame Current game instance.
 * @param {Number} aX X position of the new text object.
 * @param {Number} aY Y position of the new text object.
 * @param {String} aText The actual text that will be written.
 * @param {Object} aStyle The style properties to be set on the Text.
 */
function webfontGEOText(aGame, aX, aY, aText, aStyle) {
	Phaser.Text.call(this, aGame, aX, aY,
		aText || 'This is a text',
		aStyle || 
		
			{
			    "font": "20px Arial",
			    "align": "center"
			}
		);
		
	
	this.anchor.setTo(0.5, 0.5);
	this.data = {
	tag:'',
	geoInit: 0,
	webfont:'',
	geoEN:'',
	geoCNS:'',
	geoCNT:'',
	geoES:'',
	geoFR:'',
	geoJA:'',
	geoKO:'',
	geoRU:'',
	geoTR:'',
	geoDE:'',
	geoID:'',
	geoIT:'',
	geoMY:'',
	geoPT:'',
	geoTH:'',
	geoAR:'',
	geoVI:'',
	};
	
	// fields
	
	this.fText = this;
	
	this.font = this.data.webfont;
	this.setLanguage();
	this.addToGEODic();
	this.data.geoInit=1;
	this.text = this.text.replace("\\n", "\n");
	Global.webfontGEOTextObjs.push(this);
	
}

/** @type Phaser.Text */
var webfontGEOText_proto = Object.create(Phaser.Text.prototype);
webfontGEOText.prototype = webfontGEOText_proto;
webfontGEOText.prototype.constructor = webfontGEOText;

/* --- end generated code --- */
// -- user code here --
//Sets the GEO based on the Language Code

webfontGEOText.prototype.update = function(){
	if(this.data.geoInit==0){
		this.tag = this.data.tag;
		this.font = this.data.webfont;
		this.setLanguage();
		this.addToGEODic();
		this.data.geoInit=1;
		this.text = this.text.replace("\\n", "\n");
		Global.webfontGEOTextObjs.push(this);
		this.game.state.getCurrentState().customGEOAdjustments(this);

	}
};

webfontGEOText.prototype.setLanguage = function(){
	if(Global.LangCode == "EN" && this.data.geoEN!=''){
		this.text = this.data.geoEN;
	}
	else if(Global.LangCode == "CN_S" && this.data.geoCNS!=''){
		this.text = this.data.geoCNS;
	}
	else if(Global.LangCode == "CN_T"&& this.data.geoCNT!=''){
		this.text = this.data.geoCNT;
	}
	else if(Global.LangCode == "ES"&& this.data.geoES!=''){
		this.text = this.data.geoES;
	}
	else if(Global.LangCode == "FR"&& this.data.geoFR!=''){
		this.text = this.data.geoFR;
	}
	else if(Global.LangCode == "JA"&& this.data.geoJA!=''){
		this.text = this.data.geoJA;
	}
	else if(Global.LangCode == "KO"&& this.data.geoKO!=''){
		this.text = this.data.geoKO;
	}
	else if(Global.LangCode == "RU"&& this.data.geoRU!=''){
		this.text = this.data.geoRU;
	}
	else if(Global.LangCode == "TR"&& this.data.geoTR!=''){
		this.text = this.data.geoTR;
	}
	else if(Global.LangCode == "AR"&& this.data.geoAR!=''){
		this.text = this.data.geoAR;
	}
	else if(Global.LangCode == "DE"&& this.data.geoDE!=''){
		this.text = this.data.geoDE;
	}
	else if(Global.LangCode == "ID"&& this.data.geoID!=''){
		this.text = this.data.geoID;
	}
	else if(Global.LangCode == "IT"&& this.data.geoIT!=''){
		this.text = this.data.geoIT;
	}
	else if(Global.LangCode == "MY"&& this.data.geoMY!=''){
		this.text = this.data.geoMY;
	}
	else if(Global.LangCode == "PT"&& this.data.geoPT!=''){
		this.text = this.data.geoPT;
	}
	else if(Global.LangCode == "TH"&& this.data.geoTH!=''){
		this.text = this.data.geoTH;
	}
	else if(Global.LangCode == "VI"&& this.data.geoVI!=''){
		this.text = this.data.geoVI;
	}

};

// Adds the language to tthe  dictionary which is used to spawn the GEO buttons
webfontGEOText.prototype.addToGEODic = function(){
		if(this.data.geoEN!=''){
		if(!Global.geoDic.hasOwnProperty('EN')){
			Global.geoDic.EN="English";
		}
	}
	if(this.data.geoCNS!=''){
		if(!Global.geoDic.hasOwnProperty('CN_S')){
			Global.geoDic.CN_S="Chinese\nSimplified";
		}
	}
	if(this.data.geoCNT!=''){
		if(!Global.geoDic.hasOwnProperty('CN_T')){
			Global.geoDic.CN_T="Chinese\nTraditional";
		}
	}
	if(this.data.geoES!=''){
		if(!Global.geoDic.hasOwnProperty('ES')){
			Global.geoDic.ES="Spanish";
		}
	}
	if(this.data.geoFR!=''){
		if(!Global.geoDic.hasOwnProperty('FR')){
			Global.geoDic.FR="French";
		}
	}
	if(this.data.geoJA!=''){
		if(!Global.geoDic.hasOwnProperty('JA')){
			Global.geoDic.JA="Japanese";
		}
	}
	if(this.data.geoKO!=''){
		if(!Global.geoDic.hasOwnProperty('KO')){
			Global.geoDic.KO="Korean";
		}
	}
	if(this.data.geoRU!=''){
		if(!Global.geoDic.hasOwnProperty('RU')){
			Global.geoDic.RU="Russian";
		}
	}
	if(this.data.geoTR!=''){
		if(!Global.geoDic.hasOwnProperty('TR')){
			Global.geoDic.TR="Turkish";
		}
	}
	if(this.data.geoAR!=''){
		if(!Global.geoDic.hasOwnProperty('AR')){
			Global.geoDic.AR="Arabic";
		}
	}
	if(this.data.geoDE!=''){
		if(!Global.geoDic.hasOwnProperty('DE')){
			Global.geoDic.DE="German";
		}
	}
	if(this.data.geoID!=''){
		if(!Global.geoDic.hasOwnProperty('ID')){
			Global.geoDic.ID="Indonesia";
		}
	}
	if(this.data.geoIT!=''){
		if(!Global.geoDic.hasOwnProperty('IT')){
			Global.geoDic.IT="Italian";
		}
	}
	if(this.data.geoMY!=''){
		if(!Global.geoDic.hasOwnProperty('MY')){
			Global.geoDic.MY="Myanmar";
		}
	}
	if(this.data.geoPT!=''){
		if(!Global.geoDic.hasOwnProperty('PT')){
			Global.geoDic.PT="Portuguese";
		}
	}
	if(this.data.geoTH!=''){
		if(!Global.geoDic.hasOwnProperty('TH')){
			Global.geoDic.TH="Thai";
		}
	}
	if(this.data.geoVI!=''){
		if(!Global.geoDic.hasOwnProperty('VI')){
			Global.geoDic.VI="Vietnamese";
		}
	}
};